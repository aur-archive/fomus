diff -aur fomus-0.1.18-alpha/src/lib/mods.h fomus-0.1.18-alpha.patched/src/lib/mods.h
--- fomus-0.1.18-alpha/src/lib/mods.h	2011-06-25 05:20:31.000000000 +0200
+++ fomus-0.1.18-alpha.patched/src/lib/mods.h	2012-09-26 00:02:55.137864114 +0200
@@ -214,7 +214,7 @@
   class dlmodt2:public dlmodt1<T> {
   public:
     dlmodt2(const T& st):dlmodt1<T>(st) {}
-    void* getdata(FOMUS f) const {return initerrwrap(T::newdata(f));}
+    void* getdata(FOMUS f) const {return this->initerrwrap(T::newdata(f));}
     void freedata(void* data) const {T::freedata(data); T::initerrcheck();}	 
   };
   typedef dlmodt1<dlmodstuffinit> dlmodinit; // auxiliary modules
diff -aur fomus-0.1.18-alpha/src/lib/vars.cc fomus-0.1.18-alpha.patched/src/lib/vars.cc
--- fomus-0.1.18-alpha/src/lib/vars.cc	2011-03-30 05:56:30.000000000 +0200
+++ fomus-0.1.18-alpha.patched/src/lib/vars.cc	2012-09-26 01:19:23.745492381 +0200
@@ -450,11 +450,11 @@
     const boostspirit::symbols<numb>& ip(fd ? fd->getmicpa() : mic_parse);
     const boostspirit::symbols<numb>& op(fd ? fd->getoctpa() : oct_parse);
     if (lst.type != module_list) return false;
-    for (const module_value* i = lst.val.l.vals, *ie = lst.val.l.vals + lst.val.l.n; i < ie; ++i) {
-      if (i->type != module_string) return false;
+    for (const module_value* j = lst.val.l.vals, *ie = lst.val.l.vals + lst.val.l.n; j < ie; ++j) {
+      if (j->type != module_string) return false;
       numb nov(module_none), acv(module_none), miv(module_none), ocv(module_none);
       parserule rl(notematchhasoct(mp, ap, ip, op, nov, acv, miv, ocv));
-      parse_it p(i->val.s, endof(i->val.s));
+      parse_it p(j->val.s, endof(j->val.s));
       parse(p, parse_it(), rl);
       rat m(nov.isnull() ? std::numeric_limits<fint>::min() + 1 : numtorat(nov));
       rat a(acv.isnull() ? std::numeric_limits<fint>::min() + 1 : numtorat(acv));
